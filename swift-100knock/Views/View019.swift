//
//  View019.swift
//  swift-100knock
//
//  Created by coji on 2024/07/13.
//

import SwiftUI

struct View019: View {
  private let samples = [
    [
      "title": "日本の四季",
      "content": """
      日本は四季折々の美しさで知られる国です 。 春夏秋冬 、 それぞれの季節が独特の魅力を持ち 、 訪れる人々を魅了し続けています。
      春は桜の季節から始まります 。 淡いピンク色の花びらが風に舞う様子は 、 まるで自然が描く絵画のようです 。 公園や川沿いでは 、 多くの人々が花見を楽しみ 、 新しい始まりを祝福します 。 春はまた
        、 新緑の季節でもあります 。 若葉の鮮やかな緑色は 、 生命力に溢れ 、 心を癒してくれます。
      夏になると 、 蒸し暑さとともに 、 様々な行事が行われます 。 花火大会は夏の風物詩の一つで 、 夜空を彩る色とりどりの花火は 、 見る人の心を躍らせます 。 海や山へ出かける人も多く
        、 自然との触れ合いを楽しむ季節でもあります 。 また 、 風鈴の音色や蝉の鳴き声は 、 日本の夏の象徴的な音として親しまれています。
      秋は紅葉の季節として知られています 。 山々が赤や黄色に染まる様子は圧巻で 、 多くの観光客を引き付けます 。 また 、 秋は 「 食欲の秋 」 とも呼ばれ 、 新鮮な果物や野菜 、 魚介類など
        、 豊かな食材が楽しめます 。 澄んだ青空と爽やかな風は 、 outdoor活動に最適な環境を提供します。
      冬は雪景色が美しい季節です 。 特に北海道や東北地方では 、 真っ白な雪に覆われた風景が幻想的な雰囲気を醸し出します 。 温泉地では 、 雪見温泉を楽しむ人々で賑わいます 。 また
        、 冬は様々な行事やお祭りが開催される時期でもあり 、 年末年始の賑やかな雰囲気は日本文化の一端を垣間見ることができます。
      このように 、 日本の四季はそれぞれが独特の魅力を持っています 。 季節の移り変わりとともに変化する自然の景色 、 その季節ならではの行事や食べ物 、 人々の暮らしぶりなど
        、 日本の四季は訪れる人々に多様な体験を提供してくれます 。 四季を通じて日本の文化や伝統を肌で感じることができるのも 、 日本を訪れる魅力の一つと言えるでしょう。
      """,
    ],
    [
      "title": "技術革新と社会の変化",
      "content": """
      21世紀に入り、技術革新のスピードはますます加速しています。特に情報技術（IT）やAI（人工知能）の進歩は、私たちの日常生活や仕事のあり方、さらには社会構造そのものに大きな変革をもたらしています。
      まず、通信技術の発展により、世界中の人々がリアルタイムでつながることが可能になりました。スマートフォンの普及は、情報へのアクセスや人々のコミュニケーション方法を根本から変えました。SNS（ソーシャル・ネットワーキング・サービス）の台頭により、個人が容易に情報を発信し、世界中の人々と交流できるようになりました。これは、情報の demokratization（民主化）をもたらし、従来のメディアの役割や影響力にも変化をもたらしています。
      AIの進歩は、多くの産業に革命をもたらしています。例えば、自動運転技術は、交通システムを大きく変える可能性を秘めています。事故の減少や交通の効率化が期待される一方で、運転手という職業の将来に不安を感じる人々もいます。また、医療分野でもAIの活用が進んでおり、画像診断の精度向上や新薬開発の効率化など、多くの可能性が開かれています。
      IoT（Internet of Things）の発展により、私たちの身の回りのあらゆるモノがインターネットにつながる時代が到来しています。スマートホームやウェアラブルデバイスの普及は、私たちの生活をより便利で効率的なものにする一方で、プライバシーやセキュリティに関する新たな課題も浮き彫りになっています。
      教育の分野でも、技術革新の影響は顕著です。オンライン学習プラットフォームの発展により、世界中の人々が質の高い教育にアクセスできるようになりました。また、VR（仮想現実）やAR（拡張現実）技術の活用により、より魅力的で効果的な学習体験が可能になっています。
      一方で、技術革新がもたらす変化には課題も存在します。例えば、AIやロボット技術の発展により、多くの職業が自動化される可能性があり、雇用の問題が懸念されています。また、デジタルデバイド（情報格差）の問題も深刻化しており、技術へのアクセスや活用能力の差が、社会的・経済的格差をさらに広げる可能性があります。
      さらに、技術の進歩に伴い、倫理的な問題も浮上しています。AIの判断基準や責任の所在、個人データの利用と保護のバランス、遺伝子編集技術の使用範囲など、社会全体で議論し、合意形成を図る必要がある課題が山積しています。
      このように、技術革新は私たちの社会に多大な恩恵をもたらす一方で、新たな課題も生み出しています。これらの課題に適切に対応しながら、技術の恩恵を最大限に活用していくことが、これからの社会の発展には不可欠です。技術と人間がどのように共存し、よりよい社会を築いていくかを考え続けることが、私たち一人一人に求められているのです。
      """,
    ],
    [
      "title": "持続可能な社会の実現に向けて",
      "content": """
      近年、「持続可能性」という言葉が世界中で注目を集めています。地球温暖化、資源の枯渇、生物多様性の喪失など、人類は多くの環境問題に直面しており、これらの課題に対処しながら、経済発展と環境保護の両立を図ることが求められています。
      持続可能な社会の実現に向けて、まず重要なのは再生可能エネルギーの普及です。太陽光、風力、地熱などのクリーンエネルギーへの転換は、温室効果ガスの削減に大きく貢献します。多くの国々が、2050年までにカーボンニュートラル（温室効果ガスの排出量と吸収量を均衡させること）を目指しており、エネルギー政策の転換が急ピッチで進められています。
      循環型経済の構築も重要な課題です。従来の「大量生産・大量消費・大量廃棄」型の経済モデルから、資源を効率的に利用し、廃棄物を最小限に抑える経済システムへの移行が進められています。例えば、プラスチックごみ問題に対しては、バイオプラスチックの開発や使い捨てプラスチック製品の規制など、様々な取り組みが行われています。
      食料問題も持続可能性を考える上で避けて通れません。世界人口の増加に伴い、食料需要が増大する一方で、気候変動による農作物への影響が懸念されています。持続可能な農業practices（慣行）の導入や、食品ロスの削減、植物性タンパク質の活用など、食料システム全体の見直しが進められています。
      都市計画の分野でも、持続可能性を重視した取り組みが行われています。コンパクトシティの概念に基づき、公共交通機関の整備や緑地の確保、エネルギー効率の高い建築物の建設など、環境負荷の少ない都市づくりが進められています。
      教育も持続可能な社会の実現に向けて重要な役割を果たします。ESD（Education for Sustainable Development：持続可能な開発のための教育）の概念に基づき、環境問題や社会問題に対する理解を深め、問題解決能力を育成する教育が世界中で実施されています。
      企業の役割も重要です。ESG（環境・社会・ガバナンス）投資の拡大により、企業の環境対策や社会貢献活動が評価される時代となっています。多くの企業が、SDGs（持続可能な開発目標）の達成に向けた取り組みを強化しており、ビジネスを通じて社会課題の解決に貢献することが求められています。
      一方で、持続可能な社会の実現に向けては、様々な課題も存在します。例えば、環境対策と経済発展の両立は容易ではありません。特に発展途上国においては、経済成長を犠牲にしてまで環境対策を行うことは難しい状況にあります。また、先進国と発展途上国の間の責任の分担や、技術移転のあり方なども重要な課題となっています。
      さらに、個人のライフスタイルの変革も求められています。エネルギー消費の削減、ゴミの分別、エシカル消費など、日常生活のあらゆる場面で環境への配慮が必要とされています。しかし、こうした行動変容を社会全体に浸透させることは容易ではありません。
      持続可能な社会の実現は、一朝一夕には達成できない長期的な課題です。しかし、私たち一人一人が問題意識を持ち、日々の生活の中で小さな行動を積み重ねていくことが、大きな変化につながります。政府、企業、市民社会が一体となって取り組むことで、次世代に豊かな地球を引き継ぐことができるのです。持続可能な社会の実現は、人類共通の使命であり、私たち一人一人が主役となって取り組むべき課題なのです。
      """,
    ],

  ]

  var body: some View {
    ScrollView {
      VStack(alignment: .leading) {
        ForEach(samples, id: \.["title"]) { sample in
          Text(sample["title"]!)
            .font(.headline)
          FoldableText(text: sample["content"]!)
        }
      }.padding()
    }
  }
}

private struct FoldableText: View {
  let text: String

  @State private var isFirst = true
  @State private var isNeedFold = true
  @State private var isFolded = false
  @State var textHeight: CGFloat?

  var body: some View {
    VStack(alignment: .trailing) {
      HStack {
        Text(text)
          .frame(height: textHeight)
          .background(
            GeometryReader { geometry in
              Color.clear.preference(key: ViewHeightKey.self, value: geometry.size.height)
            }
          )
          .onPreferenceChange(ViewHeightKey.self) { viewHeight in
            print(isFirst)
            if !isFirst {
              return
            }
            isFirst = false
            if viewHeight > 80 {
              isNeedFold = true
              isFolded = true
              textHeight = 80
            } else {
              isNeedFold = false
            }
          }
      }

      HStack {
        Button(action: {
          isFolded.toggle()
          if isFolded == true {
            textHeight = 80
          } else {
            textHeight = nil
          }
        }) {
          Text(isFolded ? "もっと見る" : "たたむ")
        }
      }
    }
  }
}

private struct ViewHeightKey: PreferenceKey {
  static var defaultValue: CGFloat = 0
  static func reduce(value: inout CGFloat, nextValue: () -> CGFloat) {
    value = nextValue()
  }
}

#Preview {
  View019()
}
